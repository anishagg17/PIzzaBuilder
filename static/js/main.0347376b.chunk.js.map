{"version":3,"sources":["components/CustomChatbot.js","components/base/Base.js","components/tomato/Tomato.js","components/mushroom/Mushroom.js","components/corn/Corn.js","components/veggie/Veggie.js","components/buttonGroup/ButtonGroup.js","components/pizza/Pizza.js","App.js","serviceWorker.js","index.js"],"names":["CustomChatbot","props","steps","id","message","trigger","user","options","value","label","eventHandler","end","width","height","floating","Base","className","Tomato","Mushroom","Corn","Veggie","ButtonGroup","buttonWidth","style","onClick","Pizza","state","tomato","mushroom","veggie","corn","clickEventHandler","ingredient","setState","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0347376b.chunk.js","sourcesContent":["import React from \"react\";\nimport ChatBot from \"react-simple-chatbot\";\nfunction CustomChatbot(props) {\n    const config = {\n      width: \"300px\",\n      height: \"400px\",\n      floating: true\n    };\n    const steps = [\n        {\n           id: \"Greet\",\n           message: \"Hello, Welcome to our shop\",\n           trigger: \"Ask Name\"\n        },\n        {\n           id: \"Ask Name\",\n           message: \"Please type your name?\",\n           trigger: \"Waiting user input for name\"\n        },\n        {\n           id: \"Waiting user input for name\",\n           user: true,\n           trigger: \"Asking options to eat\"\n        },\n        {\n           id: \"Asking options to eat\",\n           message: \"Hi {previousValue}, Please click on what you want to eat!\",\n           trigger: \"Displaying options to eat\"\n        },\n        {\n           id: \"Displaying options to eat\",\n           options: [\n                      {\n                        value: \"pizza\",\n                        label: \"Pizza\",\n                        trigger: \"Asking for Tomatoes in Pizza\"\n                      },\n                      { \n                        value: \"burger\",\n                        label: \"Burger\",\n                        trigger: \"Burger Not available\"\n                      } \n                    ]\n        },\n        {\n           id: \"Burger Not available\",\n           message: \"Sorry, We don't have burger available at the  moment. Would you like to try our pizza?\",\n           trigger: \"Asking for pizza after burger\"\n        },\n        {\n           id: \"Asking for pizza after burger\",\n           options: [\n                      {\n                        value: true,\n                        label: \"Yes\",\n                        trigger: \"Asking for Tomatoes in Pizza\"\n                      },\n                      { \n                        value: \"false\",\n                        label: \"No\",\n                        trigger: \"Done\"\n                      } \n                    ]\n        },\n        {\n           id: \"Asking for Tomatoes in Pizza\",\n           message: \"Would you like to have tomatoes in your pizza\",\n           trigger: \"Adding Tomatoes in Pizza\"\n        },\n        {\n           id: \"Adding Tomatoes in Pizza\",\n           options: [\n                      {\n                        value: true,\n                        label: \"Yes\",\n                        trigger: () => {\n                           props.eventHandler(\"tomato\");\n                           return \"Asking for Mushroom in Pizza\"  \n                         }\n                      },\n                      { \n                        value: \"false\",\n                        label: \"No\",\n                        trigger: () => {\n                            props.eventHandler(\"tomato\");\n                            return \"Asking for Mushroom in Pizza\"  \n                        }\n                        // trigger: \"Asking for Mushroom in Pizza\"\n                      } \n                    ]\n        },\n        \n        {\n           id: \"Asking for Mushroom in Pizza\",\n           message: \"Would you like to have mushroom in your pizza\",\n           trigger: \"Adding Mushroom in Pizza\"\n        },\n \n        {\n           id: \"Adding Mushroom in Pizza\",\n           options: [\n                      {\n                        value: true,\n                        label: \"Yes\",\n                        trigger: () => {\n                           props.eventHandler(\"mushroom\");\n                           return \"Asking for Corn in Pizza\"  \n                         }\n                      },\n                      { \n                        value: \"false\",\n                        label: \"No\",\n                        trigger: () => {\n                            props.eventHandler(\"mushroom\");\n                            return \"Asking for Corn in Pizza\"  \n                        }\n                        // trigger: \"Asking for Corn in Pizza\"\n                      } \n                    ]\n        },\n        {\n           id: \"Asking for Corn in Pizza\",\n           message: \"Would you like to have corn in your pizza\",\n           trigger: \"Adding Corn in Pizza\"\n        },\n \n        {\n           id: \"Adding Corn in Pizza\",\n           options: [\n                      {\n                        value: true,\n                        label: \"Yes\",\n                        trigger: () => {\n                           props.eventHandler(\"corn\");\n                           return \"Asking for Veggies in Pizza\"  \n                         }\n                      },\n                      { \n                        value: \"false\",\n                        label: \"No\",\n                        trigger: () => {\n                            props.eventHandler(\"corn\");\n                            return \"Asking for Veggies in Pizza\"  \n                        }\n                        // trigger: \"Asking for Veggies in Pizza\"\n                      } \n                    ]\n        },\n         \n        {\n           id: \"Asking for Veggies in Pizza\",\n           message: \"Would you like to have veggies in your pizza\",\n           trigger: \"Adding Veggies in Pizza\"\n        },\n \n        {\n           id: \"Adding Veggies in Pizza\",\n           options: [\n                      {\n                        value: true,\n                        label: \"Yes\",\n                        trigger: () => {\n                           props.eventHandler(\"veggie\");\n                           return \"Done\"  \n                         }\n                      },\n                      { \n                        value: \"false\",\n                        label: \"No\",\n                        trigger: () => {\n                            props.eventHandler(\"veggie\");\n                            return \"Done\"  \n                        }\n                        // trigger: \"Done\"\n                      } \n                    ]\n        },\n        {\n            id: \"Done\",\n            message: \"Have a great day !!\",\n            end: true\n        }\n];\n    \n    return <ChatBot steps={steps} {...config} />;\n}\nexport default CustomChatbot;","import React from \"react\";\n\nfunction Base() {\n  return (\n    <div>\n      <div className=\"pizza-base-1\" />\n      <div className=\"pizza-base-2\" />\n      <div className=\"slice-base-1\" />\n      <div className=\"slice-base-2\" />\n    </div>\n  );\n}\n\nexport default Base;\n","import React from \"react\";\n\nfunction Tomato() {\n  return (\n    <div>\n      <div className=\"tomatoes\">\n        <div className=\"tomato-1\" />\n        <div className=\"tomato-2\" />\n        <div className=\"tomato-3\" />\n        <div className=\"tomato-4\" />\n        <div className=\"tomato-5\" />\n        <div className=\"tomato-6\" />\n        <div className=\"tomato-7\" />\n        <div className=\"tomato-8\" />\n      </div>\n\n      <div className=\"tomatoes\">\n        <div className=\"tomato-9\" />\n        <div className=\"tomato-10\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Tomato;\n","import React from \"react\";\n\nfunction Mushroom() {\n  return (\n    <div>\n      <div className=\"mushrooms\">\n        <div className=\"cup-1\" />\n        <div className=\"stem-1\" />\n        <div className=\"cup-2\" />\n        <div className=\"stem-2\" />\n        <div className=\"cup-3\" />\n        <div className=\"stem-3\" />\n        <div className=\"cup-4\" />\n        <div className=\"stem-4\" />\n        <div className=\"cup-5\" />\n        <div className=\"stem-5\" />\n        <div className=\"cup-6\" />\n        <div className=\"stem-6\" />\n        <div className=\"cup-7\" />\n        <div className=\"stem-7\" />\n      </div>\n\n      <div className=\"mushrooms\">\n        <div className=\"cup-8\" />\n        <div className=\"stem-8\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Mushroom;\n","import React from \"react\";\n\nfunction Corn() {\n  return (\n    <div>\n      <div className=\"corns\">\n        <div className=\"corn-1\" />\n        <div className=\"corn-2\" />\n        <div className=\"corn-3\" />\n        <div className=\"corn-4\" />\n        <div className=\"corn-5\" />\n        <div className=\"corn-6\" />\n        <div className=\"corn-7\" />\n        <div className=\"corn-8\" />\n        <div className=\"corn-9\" />\n        <div className=\"corn-10\" />\n        <div className=\"corn-11\" />\n      </div>\n\n      <div className=\"corns\">\n        <div className=\"corn-11\" />\n      </div>\n    </div>\n  );\n}\n\nexport default Corn;\n","import React from \"react\";\n\nfunction Veggie() {\n  return (\n    <div>\n      <div className=\"vegies\">\n        <div className=\"veg-1\" />\n        <div className=\"veg-2\" />\n        <div className=\"veg-3\" />\n        <div className=\"veg-4\" />\n        <div className=\"veg-5\" />\n        <div className=\"veg-6\" />\n        <div className=\"veg-7\" />\n        <div className=\"veg-8\" />\n        <div className=\"veg-9\" />\n        <div className=\"veg-10\" />\n        <div className=\"veg-11\" />\n        <div className=\"veg-12\" />\n        <div className=\"veg-13\" />\n      </div>\n      <div className=\"vegies\">\n        <div className=\"veg-14\" /> \n      </div>\n    </div>\n  );\n}\n\nexport default Veggie;\n","import React from \"react\";\n\nfunction ButtonGroup(props) {\n  const buttonWidth = {\n    width: \"600px\"\n  };\n  return (\n    <div>\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-danger btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"tomato\");\n          }}\n        >\n          Add/Remove Tomato\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-secondary btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"mushroom\");\n          }}\n        >\n          Add/Remove Mushroom\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-warning btn-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"corn\");\n          }}\n        >\n          Add/Remove Corn\n        </button>\n      </div>\n\n      <div className=\"d-flex justify-content-center mt-3 mb-3\">\n        <button\n          className=\"btn btn-success 1-block\"\n          style={buttonWidth}\n          onClick={() => {\n            props.eventHandler(\"veggie\");\n          }}\n        >\n          Add/Remove Veggie\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default ButtonGroup;\n","import React, { Component } from \"react\";\nimport \"./Pizza.css\";\nimport CustomChatbot from '../CustomChatbot';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Base from \"../base/Base\";\nimport Tomato from \"../tomato/Tomato\";\nimport Mushroom from \"../mushroom/Mushroom\";\nimport Corn from \"../corn/Corn\";\nimport Veggie from \"../veggie/Veggie\";\nimport ButtonGroup from \"../buttonGroup/ButtonGroup\";\n\nclass Pizza extends Component {\n  state = {\n      tomato: false,\n      mushroom: false,\n      veggie: false,\n      corn: false\n  };\n\n  clickEventHandler = ingredient => {\n    if (ingredient === \"tomato\") {\n      this.setState({\n        tomato: !this.state.tomato\n      });\n    } else if (ingredient === \"mushroom\") {\n      this.setState({\n        mushroom: !this.state.mushroom\n      });\n    } else if (ingredient === \"corn\") {\n      this.setState({\n        corn: !this.state.corn\n      });\n    } else {\n      this.setState({\n        veggie: !this.state.veggie\n      });\n    }\n  };\n\n  render() {\n    const tomato = this.state.tomato && <Tomato />;\n    const mushroom = this.state.mushroom && <Mushroom />;\n    const corn = this.state.corn && <Corn />;\n    const veggie = this.state.veggie && <Veggie />;\n\n    return (\n      <div>\n        <div className=\"container mt-5\">\n          <div className=\"d-flex justify-content-center\">\n            <div className=\"plate\">\n              <Base />\n              {tomato}\n              {mushroom}\n              {corn}\n              {veggie}\n            </div>\n          </div>\n          <ButtonGroup eventHandler={this.clickEventHandler} />\n          <CustomChatbot eventHandler={this.clickEventHandler} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Pizza;\n","import React from \"react\";\nimport \"./App.css\";\nimport Pizza from \"./components/pizza/Pizza\";\n\nfunction App() {\n  return <Pizza />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}